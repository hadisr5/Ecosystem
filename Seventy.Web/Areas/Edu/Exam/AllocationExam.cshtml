@model Seventy.ViewModel.EDU.ExamUserViewModel
@{
    ViewBag.Title = "تخصیص آزمون به فراگیر";
    Layout = "~/Areas/Edu/Shared/_Layout.cshtml";
}
@section Styles{
    <link rel="stylesheet" type="text/css" href="/app-assets/vendors/css/forms/selects/select2.min.css">
    <link rel="stylesheet" type="text/css" href="/app-assets/vendors/css/tables/datatable/datatables.min.css">
}
/* test */
<section>
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h4 class="card-title">@ViewBag.Title</h4>
                    <a class="heading-elements-toggle"><i class="la la-ellipsis-v font-medium-3"></i></a>
                    <div class="heading-elements">
                        <ul class="list-inline mb-0">
                            <li><a data-action="collapse"><i class="ft-minus"></i></a></li>
                            <li><a data-action="expand"><i class="ft-maximize"></i></a></li>
                        </ul>
                    </div>
                </div>

                <div class="card-content collapse show">
                  
                    <div class="card-body card-dashboard">
                        <div class="row">
                            <div class="col-12">
                                @if (TempData.ContainsKey("Message"))
                                {
                                    <div class="haftad-alert" type="info" title="@TempData["Message"]"></div>
                                }
                            </div>
                        </div>
                        <form asp-area="Edu" asp-controller="Exam" asp-action="AllocationExam" method="post" enctype="multipart/form-data">
                            <div class="form-group">
                                <div asp-validation-summary="All" class="text-danger"></div>
                            </div>

                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group row">
                                        <label class="col-md-3 label-control">
                                            نوع
                                        </label>
                                        <div class="col-md-9">
                                            <select class="form-control select2" id="ExamType" onchange="LoadExams()">
                                                <option selected value="آزمون">آزمون</option>
                                                <option value="تمرین">تمرین</option>
                                                <option value="کوییز">کوییز</option>
                                            </select>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group row">
                                        <label id="ExamIdLable" class="col-md-3 label-control">
                                            آزمون
                                        </label>
                                        <div class="col-md-9">
                                            <select class="form-control select2" placeholder="آزمون" id="ExamID" name="ExamID">
                                            </select>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group row">
                                        <label class="col-md-3 label-control">
                                            نوع
                                        </label>
                                        <div class="col-md-9">

                                            <select class="form-control select2" placeholder=" نوع کاربر" id="ExamGroup" name="ExamGroup" onchange="LoadList()">
                                                <option value="1">کاربر</option>
                                                <option value="2">گروه</option>
                                            </select>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group row" id="cList">

                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group row">
                                        <div class="col-sm-10 offset-3">
                                            <button type="submit" class="btn btn-primary">ثبت</button>
                                            <button type="reset" class="btn btn-danger">انصراف</button>
                                        </div>
                                    </div>
                                </div>
                            </div>

                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
@{
    await Html.RenderPartialAsync("~/Areas/Edu/Shared/PartialLoading.cshtml");
}

<section id="List"></section>


@section Scripts{
    <script src="/app-assets/vendors/js/tables/datatable/datatables.min.js" type="text/javascript"></script>
    <script src="/app-assets/vendors/js/forms/select/select2.full.min.js" type="text/javascript"></script>
    <script src="/app-assets/js/scripts/forms/select/form-select2.min.js" type="text/javascript"></script>
    <script src="/app-assets/vendors/js/pagination/jquery.twbsPagination.min.js" type="text/javascript"></script>
    <script src="/app-assets/js/scripts/pagination/pagination.js" type="text/javascript"></script>

    <script>
        var currentPage = 1;
        var totalPage = 0;
        $(document).ready(function () {
            LoadPage(currentPage);
            LoadList();
        });
        function LoadExams() {
            $('#ExamID').val(null).trigger('change'); ExamIdLable
            $('#ExamIdLable').text($('#ExamType').val()); 
        }

        $('#ExamID').select2({
            ajax: {
                url: '/edu/Exam/filterdExam',
                dataType: 'json',
                type: "post",
                data: function (params) {
                    return {
                        term: params.term || "",
                        page: params.page || 1,
                        type: $('#ExamType').val() || "آزمون"

                    };
                },
                processResults: function (data, page) {
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Title,
                                //name: item.name,
                                id: item.ID
                            }
                        })
                    };
                },
            }
        });

        function LoadPage(id) {
            var p = $("#PageBtn_" + id);
            p.removeClass("hidden");

            $('#List').load("/Edu/Exam/AllocationExamAssignedList", { page: id },
                function (responseTxt, statusTxt, xhr) {
                    $(".waiting").hide();
                    $("#configuration").show();
                    if (statusTxt === "success") {
                        totalPage = parseInt($("#TotalPage").val());
                        p.addClass("hidden");
                    }
                });
        }

        function NextPage() {
            if (currentPage < totalPage) {
                currentPage += 1;
                LoadPage(currentPage);
            }
        }

        function PrevPage() {
            if (currentPage > 1) {
                currentPage -= 1;
                LoadPage(currentPage);
            }
        }

        function LoadList() {
            $('#cList').load("/Edu/Exam/AllocationExamList", { ExamGroup: $("#ExamGroup").val() });
        }

        function Delete(id) {
            swal({
                title: 'جهت حذف این اطلاعات مطمئن هستید؟',
                text: 'شما نمی توانید این را برگردانید!',
                type: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'بله ، آن را حذف میکنم!',
                cancelButtonText: 'منصرف شدم'
            }).then((result) => {
                if (result.value) {
                    doDelete(id);
                }
            });
        }

        function doDelete(id) {
            $.ajax({
                type: "POST",
                url: "/Edu/Exam/AllocationExamRemove",
                data: {
                    ID: id
                },
                success: function (data) {
                    if (data === "done") {
                        $("#Row_" + id).remove();
                        swal("انجام شد", "با موفقیت انجام شد", "success");
                    }
                    else {
                        swal("خطا", data, "error");
                    }
                }, error: function (data) {
                    swal("خطا", data, "error");
                }
            });
        }
    </script>
}